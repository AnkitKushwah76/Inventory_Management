c
params[:user_id]
c
params[:item_name]
c
item_params
params[:id]
c
params[:id]
c
params[:id]
c
params[:item_price]
params[:item_image]
params[:item_name]
params[:items][:item_name]
  @item = Item.find(params[:id])
c
render json: { message: 'item deleted successfully..'}
  item = Item.find(params[:id])
c
render json: item.as_json(only: [:item_name,:item_price,:item_quatity,:user_id]).merge(item_image_path: url_for(item.item_image))
item.item_image.present?
item = Item.find(params[:id])
item.item_image.present?
c
 item.destroy 
item.item_image.attached? 
 item = Item.find(params[:id])
c
item.destroy
 item = Item.find(params[:id])
c
item.destroy
item = Item.find(params[:id])
c
item.save
 item = Item.new(item_params)
c
   21:           avatar_path: url_for(items.item_image))
   20:           items.as_json(only: [:item_name,:item_price,:item_quatity,:user_id]).merge(
  if items.item_image.attached? 
render json: items.map{ |items|
 items=Item.find(params[:id])
c
 items = Item.all.joins(:item_image_attachment)
c
items = Item.all.joins(:item_image_attachment)
exit
 render json: items, include: [:item_image]
 items = Item.all
exit
 render json: items, include: [:item_image]
 items = Item.all
 render json: items, include: [:item_image]
exit
render json: items, include: [:images]
items = Item.all
c
render json: items
 items = Item.all
render json: items
c
exit
render json: items
items = Item.all
c
params[:invoices][:item_name]
c
params[:invoices][:user_id]
params[:invoices][:item_id]
params[:invoices][:total_amount]
params[:invoices][:time]
params[:invoices][:date]
params[:invoices][:item_quatity]
params[:invoices][:item_price]
params[:invoices][:item_name]
exit
exi
end
if invoices.save
invoices.save
invoices = Invoice.new(invoices_params)
exit
c
invoice = Invoice.find(params[:id])
c
render json: { message: 'Invoice not found' }
invoice = Invoice.find(params[:id])
c
 invoices = Invoice.find(params[:id])
c
 invoices = Invoice.find(params[:id])
c
 invoices = Invoice.find(params[:id])
c
 invoices = Invoice.find(params[:id])
exit
c
c\
invoices = Invoice.find(params[:id])
c
invoices = Invoice.find(params[:id])
invoices
 if invoices
   10:     if invoices
c
user
c
exit
 items = Item.all
c
render json: items
items = Item.all
c
items
exit
params[:id]
items
SystemStackErrorSystemStackErrorSystemStackError
http://127.0.0.1:3000 /api/v1/items/
exit
@items
a
exit
a
exit
a
exit
@all_users
exit
@all_users
exit
u.has_role? :admin
exit
@my_orders
c
params[:invoices][:item_id]
params[:invoices][:item_quatity]
params[:invoices][:item_price]
params[:invoices][:item_name]
pramas[:invoices][:item_name]
 @invoices = Invoice.new(invoices_params)
exit
@invoices.save
@invoices = Invoice.new(invoices_params)
exit
@invoices = Invoice.new(invoices_params)
 if @invoices.save
@invoices.save
invoices.save
c
params[:invoices][:item_name]
params[:invoices][:item_price]
c
params[:invoices][:item_quatity]
params[:invoices][:item_price]
params[:invoices][:item_name]
params[:invoices][:item_id]
c
exit
current_user.id
user_id
c
@items
c
@items
exit
 @item.save
if @item.save
exit
c
params[:item_name}
params[:id}
@item
c
exit
user_id.id
user_id
params[:id]
c
exit
user_id
c
exit
user_id.ids
user_id.id
user_id
params[:id]
c
exit
user_id.ids
params[:id]
user_id.id
user_id
c
exit
params[user_id]
params[id]
c
exit
c
exit
c
exit
c
exit
params[user_id]
user_id
c
exit
@items
current_user.id
c
exit
user.id
user
exit
user
user.id
exit
user
user.id
exit
user.id
user
exit
user.id
item
user
exit
 puts "current_user.id---#{current_user.id}
c
current_user_id
exit
c
exit
c
exit
c
exit
c
exit
exir
c
exit
c
exit
row["itemName"]
c
cc
c
exit
c
exit
row["quantity"]
